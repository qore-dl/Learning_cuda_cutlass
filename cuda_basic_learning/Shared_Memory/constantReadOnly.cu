#include "common.h"
#include <cuda_runtime.h>
#include <stdio.h>

/*
5.5 常量内存
常量内存是一种专用的内存，它用于只读数据和统一访问线程束中线程的数据。
常量内存对内核代码而言是只读的，但它对于主机而言既是可读的也是可写的。
常量内存位于设备的DRAM上（和全局内存一样），并且有一个专用的片上缓存。
和L1 Cache 和共享内存一样，从每个 SM 的常量缓存中读取的延迟，比直接从常量内存中读取的低得多。
每个 SM 常量内存缓存大小的限制为 64 KB。
到目前为止，相较于在本书中学习的任何其他类型的内存而言，常量内存有一个不同的最优访问模式。
在常量内存中，如果线程束中的所有线程都访问相同的位置，那么这个访问模式就是最优的。
如果线程束中的线程访问不同的地址，则访问需要串行。
因此，一个常量内存读取的成本与线程束中线程读取唯一地址的数量呈线性关系。
在全局作用域中，必须用以下修饰符声明常量变量：
__constant__
*/